{"version":3,"sources":["components/AboutApp.js","components/CardMaker.js","components/GameArena.js","components/Score.js","components/ScoreBoard.js","App.js","index.js"],"names":["AboutApp","id","href","rel","target","CardMaker","props","useState","imagesData","setImagesData","photographer","user","page","cardImage","backgroundColor","useEffect","fetch","then","response","json","jsonResult","catch","console","log","chosenImageData","hits","ind","imageURL","webformatURL","pageURL","backgroundImage","backgroundSize","backgroundRepeat","backgroundPosition","className","style","numbOfCardsOnDisplay","idOfEachCardOnDisplay","newLevel","bestScore","GameArena","cards","setCards","currentLevel","setCurrentLevel","currentScore","setCurrentScore","updateCurrScoreOnDisplay","newScore","document","getElementById","innerText","updateGameData","i","includes","alert","push","c","length","newCards","Array","map","uniqid","cardsOnDisplay","getElementsByClassName","from","forEach","addEventListener","removeEventListener","arr","randomIndNum","Math","floor","random","shuffleCards","Score","icon","text","numb","ScoreBoard","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.f0aed0ea.chunk.js","sourcesContent":["function AboutApp() {\r\n    return (\r\n        <div id='about-app-div'>\r\n            <h1>UniqPik</h1>\r\n            <a href=\"https://www.codesweetly.com/\" rel=\"noreferrer\" target=\"_blank\">Created by Oluwatobi Sofela</a>\r\n            <p><strong>Memory Game:</strong> Attain your highest score by making unique selections ▶</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AboutApp;","import { useState, useEffect } from 'react';\r\n\r\nfunction CardMaker(props) {\r\n    const [imagesData, setImagesData] = useState(null);\r\n    const photographer = {\r\n        user: 'Oluwatobi',\r\n        page: 'https://www.codesweetly.com/',\r\n    }\r\n\r\n    let cardImage = { backgroundColor: 'white' };\r\n\r\n    useEffect(() => {\r\n        fetch('https://pixabay.com/api/?key=1675259-94795a0b768aa02bfe95f3865&q=flowers&image_type=photo&orientation=horizontal&per_page=132')\r\n        .then(response => response.json())\r\n        .then(jsonResult => setImagesData(jsonResult))\r\n        .catch(() => console.log('Something went wrong'))\r\n    }, []);\r\n\r\n    if(imagesData) {\r\n        const chosenImageData = imagesData.hits[props.ind];\r\n        const imageURL = chosenImageData.webformatURL;\r\n\r\n        photographer.user = chosenImageData.user;\r\n        photographer.page = chosenImageData.pageURL;\r\n\r\n        cardImage = {\r\n            backgroundImage:`url(${imageURL})`,\r\n            backgroundColor: 'white',\r\n            backgroundSize: 'cover',\r\n            backgroundRepeat: 'no-repeat',\r\n            backgroundPosition: 'center',\r\n        }\r\n    }\r\n\r\n    return (\r\n        <article id={props.id} className='card-article' style={cardImage}>\r\n            <div className='card-dummy-div'></div>\r\n            <div className='card-text-div'>\r\n                <a className=\"image-credit\" target=\"_blank\" rel='noreferrer' href={photographer.page}>\r\n                    {photographer.user}\r\n                </a>\r\n            </div>\r\n        </article>\r\n    )\r\n}\r\n\r\nexport default CardMaker;","import { useState, useEffect } from 'react';\r\nimport CardMaker from './CardMaker';\r\nimport uniqid from 'uniqid';\r\n\r\nlet numbOfCardsOnDisplay = null;\r\nlet idOfEachCardOnDisplay = [];\r\nlet newLevel = true;\r\nlet bestScore = 0;\r\n\r\nfunction GameArena() {\r\n    const [cards, setCards] = useState([]);\r\n    const [currentLevel, setCurrentLevel] = useState(1);\r\n    const [currentScore, setCurrentScore] = useState(0);\r\n\r\n    function updateCurrScoreOnDisplay(newScore) {\r\n        const nodeOfCurrentScore = document.getElementById('current-score');\r\n        nodeOfCurrentScore.innerText = newScore;\r\n    }\r\n\r\n    function updateLevelsData() {\r\n        if (currentLevel > 30) {\r\n            alert(\r\n                `\r\n                Wow! Congratulations 🤝\r\n                You've won the game with a maximum score of ${currentScore} 🥇🏆🎉 \r\n                Try another round.\r\n                `\r\n            );\r\n            setCurrentScore(0);\r\n            setCurrentLevel(1);\r\n            idOfEachCardOnDisplay = [];\r\n            updateCurrScoreOnDisplay(0);\r\n            return;\r\n        }\r\n\r\n        const newCards = [];\r\n        const nodeOfCurrentLevel = document.getElementById('current-level');\r\n\r\n        nodeOfCurrentLevel.innerText = currentLevel;\r\n        numbOfCardsOnDisplay = currentLevel * 4;\r\n        newLevel = true;\r\n\r\n        [...Array(numbOfCardsOnDisplay)].map(\r\n            i => newCards.push(<CardMaker ind={newCards.length} id={uniqid()} key={uniqid()} />)\r\n        );\r\n\r\n        setCards(newCards);\r\n    }\r\n\r\n    function updateGameData(i) {\r\n        if (!idOfEachCardOnDisplay.includes(i.id)) {\r\n            idOfEachCardOnDisplay.push(i.id);\r\n            setCurrentScore(c => {\r\n                updateCurrScoreOnDisplay(c + 1);\r\n                if (bestScore <= c) {\r\n                    const nodeOfBestScore = document.getElementById('best-score');\r\n                    nodeOfBestScore.innerText = c + 1;\r\n                    bestScore = c + 1;\r\n                }\r\n                return c + 1;\r\n            });\r\n\r\n            if (idOfEachCardOnDisplay.length === numbOfCardsOnDisplay) {\r\n                idOfEachCardOnDisplay = [];\r\n                setCurrentLevel(c => {\r\n                    newLevel = true;\r\n                    return c + 1;\r\n                });\r\n            }\r\n            newLevel = false;\r\n        } else {\r\n            setCurrentScore(0);\r\n            setCurrentLevel(1);\r\n            idOfEachCardOnDisplay = [];\r\n            updateCurrScoreOnDisplay(0);\r\n            alert(\"Gave over! You previously selected that card. Try again.\");\r\n        }\r\n    }\r\n\r\n    function configClickEvent() {\r\n        const cardsOnDisplay = document.getElementsByClassName('card-article');\r\n        newLevel && Array.from(cardsOnDisplay).forEach( i => i.addEventListener('click', () => updateGameData(i)));\r\n        return () => Array.from(cardsOnDisplay).forEach(i => i.removeEventListener('click', updateGameData));\r\n    }\r\n\r\n    function shuffleCards(arr) {\r\n        for (let i = arr.length - 1; i > 0; i--) {\r\n          const randomIndNum = Math.floor(Math.random() * (i + 1));\r\n          [arr[i], arr[randomIndNum]] = [arr[randomIndNum], arr[i]];\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    // I intentionally omitted currentScore in updateLevelsData's dependency array \r\n    // to prevent updateLevelsData's execution each time the score changes.\r\n    useEffect(updateLevelsData, [currentLevel]);\r\n    useEffect(configClickEvent);\r\n\r\n    return (\r\n        <div id='game-arena-div'>\r\n            { shuffleCards(cards) }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GameArena;","function Score(props) {\r\n    return (\r\n        <div className='score-div'>\r\n            <span className='score-div-icon'>{props.icon}</span>\r\n            <span className='score-div-text'>{props.text}</span>\r\n            <span id={props.id} className='score-div-numb'>{props.numb}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Score;","import Score from './Score'\r\n\r\nfunction ScoreBoard() {\r\n    const currentScore = {\r\n        icon: '⏳',\r\n        text: 'Current Score',\r\n        numb: 0\r\n    };\r\n\r\n    const bestScore = {\r\n        icon: '⭐',\r\n        text: 'Best Score',\r\n        numb: 0\r\n    };\r\n\r\n    const currentLevel = {\r\n        icon: '📌',\r\n        text: 'Current Level',\r\n        numb: 1\r\n    };\r\n\r\n    return (\r\n        <div id='score-board-div'>\r\n            <Score id='current-score' icon={currentScore.icon} text={currentScore.text} numb={currentScore.numb} />\r\n            <Score id='best-score' icon={bestScore.icon} text={bestScore.text} numb={bestScore.numb} />\r\n            <Score id='current-level' icon={currentLevel.icon} text={currentLevel.text} numb={currentLevel.numb} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ScoreBoard;","import AboutApp from './components/AboutApp'\nimport GameArena from './components/GameArena'\nimport ScoreBoard from './components/ScoreBoard'\n\nfunction App() {\n  return (\n    <div id='app-sections'>\n      <AboutApp />\n      <GameArena />\n      <ScoreBoard />\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}